Open main1.py. Before running it, what do you expect this program to do? It looks like it would greet the user and then ask the user the question in the 
    input() and wait for the user to type an answer.

Now right click on the window and select “Run Python File in Terminal”. Click in the bottom panel, and answer the question. Describe what happened. 
    My guess was correct. It printed the greeting and asked the user to input their favorite color.

What do you think the program did with what you typed? Nothing.

Open main2.py. Before running it, describe how this is different than main1.py. It saves the input to a variable and then prints it to the user.

What do you think the color = input() will do? Save the user input to a fixed location.

Run the program in the terminal and answer the question. Did the program do what you expected? Yes, I would assume that it put my answer into memory before terminating.

Open main3.py. Before running it, describe how this is different than main2.py. It has an if-else statement that prints different strings based on the user input.

What is happening on lines 11–14? These are the cases for the if-else statement that determines what the system prints. It prints "Correct!" if the user types
    "red" and "Sorry, try again." if the input is anything else.

Why are lines 12 and 14 indented? It is to keep the heirarchy of code. The print statements are subsets (not sure what the word is) of the if or else lines so that they will
    only run in those cases.

Run the program and answer the question. What happens if you don’t capitalize Red? It will go to the else case and print 
    Sorry, try again."

What does this tell you about "color"? It is case sensitive and stores exactly what you put in. 

Open main4.py. Before running it, describe how this is different than main2.py. It has an or statement in the if case that make it accept "Red" or "red".

What problem is this trying to solve? It is trying to make that if statement case insensitive. 

Run the program and answer the question. What happens if you use some other capitalization scheme (i.e., “RED” or “reD“)? It returns false and goes to the else statement.

Open main5.py. What do you expect line 11 to do? It will turn any input into the same characters but lowercase.

What problem is it trying to solve? The problem is that answers that have different spacings are counted as wrong.

Run the program and answer the question. What happens if you add spaces before or after the word (i.e., “  RED  “ or “ red”)? It will return false and choose the else case.

Open main6.py. How is line 11 different than main5.py? It has .strip() after the lowercase method.

What would you guess .strip() is doing? It removes whitespaces before and after the alphabetic characters.

Run the program and answer the question. Is there another way of writing “red” that will break this logic? That seems to be what it does. You could put spaces between the letters,
    like "r e d".

Open main7.py. Before running this program, how do you expect this to be different than main6.py? It has a third option in the if-else. Pink is now an option.

What is the purpose of line 11? It stores the stripped, lowercased string in a variable so that it isn't typed out twice.

Run the program and answer the question. Both of my answers were correct. There is a new option, and there is no visual indication but it is typed once
    instead of twice.

Open main8.py. What is the purpose of line 11? It creates a loop that allows input more than once up until the correct answer is given.

Why are lines 12–19 indented? They are in the while loop, so everything indented will run each time the loop runs.

Run the program. What would happen if line 12 were moved before line 11 (and no longer indented)? It would work normally if the answer was red, but any other answer
    would create an infinite loop since it would always be something other than red.

Make that change and run the program again. To end any Python program, you can type ctrl-c.

Open main9.py. What is happening on line 12? Line 12, which is "while (color != 'red'):" tests the input. If it is red with any form of capitalization or whitespace,
    it returns false. Otherwise it returns true and continues into the loop.

What is the purpose of “count”? To keep track of how many times the loop iterates.

What is happening on line 22? It formats (concatenates the string with the count number) the string and tells the user how many guesses it took to guess red. The
    .format inserts count into the brackets.

Run the program.

*Extra credit:* open main10.py. Add a comment to each line describing what it is doing (a comment follows a pound sign [#]). 

Commit your changes and push them back to the repository. 

Did you do the extra credit? Yes.